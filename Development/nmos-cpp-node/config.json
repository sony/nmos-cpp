// Note: C++/JavaScript-style single and multi-line comments are permitted and ignored in nmos-cpp config files

// Configuration settings and defaults for the NMOS Node and Registration APIs, and the Connection API
{
    // error_log [registry, node]: filename for the error log or an empty string to write to stderr
    //"error_log": "",

    // access_log [registry, node]: filename for the access log (in Common Log Format) or an empty string to discard
    //"access_log": "",

    // logging_level [registry, node]: integer value, between 40 (least verbose, only fatal messages) and -40 (most verbose)
    //"logging_level": 0,

    // host_name [registry, node]: the host name for which to advertise services or an empty string to use the default
    //"host_name": "",

    // domain [registry, node]: the domain on which to browse for services or an empty string to use the default domain (local/mDNS)
    //"domain": "",

    // host_address/host_addresses [registry, node]: used to construct response headers (e.g. 'Link' or 'Location') and URL fields in the data model
    //"host_address": "127.0.0.1",
    //"host_addresses": array-of-ip-address-strings,

    // is04_versions [registry, node]: used to specify the enabled API versions (advertised via 'api_ver') for a version-locked configuration
    //"is04_versions": ["v1.1", "v1.2"],

    // is05_versions [node]: used to specify the enabled API versions for a version-locked configuration
    //"is05_versions": ["v1.0"],

    // pri [registry, node]: used for the 'pri' TXT record; specifying nmos::service_priorities::no_priority (maximum value) disables advertisement completely
    //"pri": 100,

    // highest_pri, lowest_pri [node]: used to specify the (inclusive) range of suitable 'pri' values of discovered APIs, to avoid development and live systems colliding
    //"highest_pri": 0,
    //"lowest_pri": 2147483647,

    // discovery_backoff_min/discovery_backoff_max/discovery_backoff_factor [node]: used to back-off after errors interacting with all discoverable Registration APIs
    //"discovery_backoff_min": 1,
    //"discovery_backoff_max": 30,
    //"discovery_backoff_factor": 1.5,

    // registry_address [node]: used to construct request URLs for registry APIs (if not discovered via DNS-SD)
    //"registry_address": ip-address-string,

    // registry_version [node]: used to construct request URLs for registry APIs (if not discovered via DNS-SD)
    //"registry_version": "v1.2",

    // port numbers [registry, node]: ports on which to listen for each API

    // http_port [registry, node]: if specified, used in preference to the individual defaults for each HTTP API
    //"http_port": 0,

    // registration_port [node]: used to construct request URLs for the registry's Registration API (if not discovered via DNS-SD)
    //"registration_port": 3210,
    //"node_port": 3212,
    //"connection_port": 3215,

    // listen_backlog [registry, node]: the maximum length of the queue of pending connections, or zero for the implementation default (the implementation may not honour this value)
    //"listen_backlog": 0,

    // registration_heartbeat_interval [node]:
    // "Nodes are expected to peform a heartbeat every 5 seconds by default."
    // See https://github.com/AMWA-TV/nmos-discovery-registration/blob/v1.2/docs/4.1.%20Behaviour%20-%20Registration.md#heartbeating
    //"registration_heartbeat_interval": 5,

    // registration_request_max [node]: timeout for interactions with the Registration API /resource endpoint
    //"registration_request_max": 30,

    // registration_heartbeat_max [node]: timeout for interactions with the Registration API /health/nodes endpoint
    // Note that the node needs to be able to get a response to heartbeats (if not other requests) within the garbage collection interval of the Registration API on average,
    // but the worst case which could avoid triggering garbage collection is (almost) twice this value... see registration_expiry_interval
    //"registration_heartbeat_max": 24,

    // immediate_activation_max [node]: timeout for immediate activations within the Connection API /staged endpoint
    //"immediate_activation_max": 30,

    // Configuration settings and defaults for experimental extensions

    // seed id [registry, node]: optional, used to generate repeatable id values when running with the same configuration
    //"seed_id": uuid-string,

    // label [registry, node]: used in resource description/label fields
    //"label": "",

    // port numbers [registry, node]: ports on which to listen for each API
    // see http_port

    //"settings_port": 3209,
    //"logging_port": 5106,

    "don't worry": "about trailing commas"
}
